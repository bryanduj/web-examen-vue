{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ProspectosEspecificos',\n  data() {\n    return {\n      comentarios: '',\n      prospectoData: null,\n      options: [{\n        value: 1,\n        text: this.getStatusText(1)\n      }, {\n        value: 2,\n        text: this.getStatusText(2)\n      }, {\n        value: 3,\n        text: this.getStatusText(3)\n      }]\n    };\n  },\n  created() {\n    // Obtener el parámetro 'id' de la URL\n    const prospectoId = this.$route.params.id;\n    // Realizar una solicitud a la API utilizando el parámetro 'prospectoId'\n    fetch(`http://localhost/prospectos/${prospectoId}`).then(response => response.json()).then(data => {\n      // Asignar la respuesta de la API a la variable 'prospectoData'\n      this.prospectoData = data;\n    }).catch(error => {\n      console.error('Error al obtener datos del prospecto:', error);\n    });\n  },\n  methods: {\n    verdocumento() {\n      this.showModal = true; // Mostrar el modal al hacer clic en el botón\n    },\n    getDocumentoSrc() {\n      return this.prospectoData.Archivo;\n    },\n    aprobar() {\n      // Crear un objeto con los datos del formulario\n      const formData = {\n        comentarios: this.comentarios,\n        estatus: 2,\n        empleadoModifico: 2\n      };\n\n      // Realizar la solicitud POST a la API\n      fetch(`http://localhost/prospectos/${this.$route.params.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Error en la solicitud');\n          alert('¡No se puede completar la solicitud!');\n        }\n        alert('Prospecto modificado con éxito!');\n        this.$router.push('/');\n        return response.json();\n      }).then(data => {\n        console.log('Respuesta de la API:', data);\n        // Aquí puedes manejar la respuesta de la API según sea necesario\n      }).catch(error => {\n        console.error('Error al enviar los datos:', error);\n        // Aquí puedes manejar errores de solicitud\n      });\n    },\n    rechazar() {\n      // Crear un objeto con los datos del formulario\n      const formData = {\n        comentarios: this.comentarios,\n        estatus: 3,\n        empleadoModifico: 2\n      };\n\n      // Realizar la solicitud POST a la API\n      fetch(`http://localhost/prospectos/${this.$route.params.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Error en la solicitud');\n          alert('¡No se puede completar la solicitud!');\n        }\n        alert('Prospecto modificado con éxito!');\n        this.$router.push('/');\n        return response.json();\n      }).then(data => {\n        console.log('Respuesta de la API:', data);\n        // Aquí puedes manejar la respuesta de la API según sea necesario\n      }).catch(error => {\n        console.error('Error al enviar los datos:', error);\n        // Aquí puedes manejar errores de solicitud\n      });\n    },\n    validar() {\n      const editar = this.$route.params.editar;\n      if (editar == 1) {\n        return true;\n      }\n      return false;\n    },\n    getStatusText(status) {\n      switch (status) {\n        case 1:\n          return 'Por revisar';\n        case 2:\n          return 'Autorizado';\n        case 3:\n          return 'Rechazado';\n        default:\n          return 'Estado desconocido';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","comentarios","prospectoData","options","value","text","getStatusText","created","prospectoId","$route","params","id","fetch","then","response","json","catch","error","console","methods","verdocumento","showModal","getDocumentoSrc","Archivo","aprobar","formData","estatus","empleadoModifico","method","headers","body","JSON","stringify","ok","Error","alert","$router","push","log","rechazar","validar","editar","status"],"sources":["D:\\entrevista\\VUE\\examen-vue\\src\\components\\ProspectosEspecificos.vue"],"sourcesContent":["<template>\r\n            <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n\r\n    <div>\r\n      <!-- Mostrar información del prospecto -->\r\n      <div v-if=\"prospectoData\">\r\n        <h1>Información del Prospecto</h1>\r\n        <p>\r\n  Nombre: {{ prospectoData.Nombre }} \r\n  {{ prospectoData.PrimerApellido }} \r\n  {{ prospectoData.SegundoApellido ? prospectoData.SegundoApellido : '' }}\r\n</p>\r\n        <p>Calle: {{ prospectoData.Calle }}</p>\r\n        <p>Número: {{ prospectoData.Numero }}</p>\r\n        <p>Colonia: {{ prospectoData.Colonia }}</p>\r\n        <p>Código Postal: {{ prospectoData.CodigoPostal }}</p>\r\n        <p>Teléfono: {{ prospectoData.Telefono }}</p>\r\n        <p>RFC: {{ prospectoData.RFC }}</p>\r\n        <p>Estatus: {{ getStatusText(prospectoData.Estatus) }}</p>\r\n        <p v-if=\"prospectoData.Comentarios\">Comentarios: {{ prospectoData.Comentarios }}</p>\r\n        <p>Documento:{{ prospectoData.NombreDocumento }}</p>\r\n  <!-- Botón para abrir el modal -->\r\n  <button @click=\"verdocumento()\">\r\n        <img class=\"abrir\" src=\"../assets/ojo.png\">\r\n      </button>\r\n\r\n      <!-- Modal -->\r\n      <div class=\"modal\" v-if=\"showModal\">\r\n        <div class=\"modal-content\">\r\n          <!-- Botón para cerrar el modal -->\r\n          <button @click=\"showModal = false\" class=\"close\">&times;</button>\r\n          <!-- Contenido del PDF -->\r\n          <embed :src=\"getDocumentoSrc()\" type=\"application/pdf\" width=\"100%\" height=\"500px\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        \r\n      </div>\r\n      <div class=\"long\" v-if=\"validar()\">\r\n          <span>Comentarios</span>\r\n          <input  type=\"text\" v-model=\"comentarios\" maxlength=\"100\">\r\n          <div>\r\n            <button @click=\"aprobar()\" class=\"btn btn-primary\" :disabled=\"comentarios.trim() !=''\">Aprobar</button>\r\n          <button @click=\"rechazar()\" class=\"btn btn-danger\" :disabled=\"comentarios.trim() === ''\">Rechazar</button>\r\n          </div>\r\n        </div>\r\n      <!-- Manejo de carga o error -->\r\n      <div v-if=\"!prospectoData\">\r\n        <p>Cargando...</p>\r\n      </div>\r\n   \r\n  </template>\r\n  \r\n  <script>\r\n\r\n  export default {\r\n    name: 'ProspectosEspecificos',\r\n    data() {\r\n      return {\r\n        comentarios: '',\r\n        prospectoData: null,\r\n        options: [\r\n      { value: 1, text: this.getStatusText(1) },\r\n      { value: 2, text: this.getStatusText(2) },\r\n      { value: 3, text: this.getStatusText(3) }\r\n    ]\r\n      };\r\n      \r\n    },\r\n    created() {\r\n      // Obtener el parámetro 'id' de la URL\r\n      const prospectoId = this.$route.params.id;\r\n      // Realizar una solicitud a la API utilizando el parámetro 'prospectoId'\r\n      fetch(`http://localhost/prospectos/${prospectoId}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // Asignar la respuesta de la API a la variable 'prospectoData'\r\n          this.prospectoData = data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error al obtener datos del prospecto:', error);\r\n        });\r\n    },\r\n    methods: {\r\n      verdocumento() {\r\n      this.showModal = true; // Mostrar el modal al hacer clic en el botón\r\n    },\r\n\r\n      getDocumentoSrc() {\r\n      return this.prospectoData.Archivo;\r\n    },\r\n      aprobar() {\r\n        // Crear un objeto con los datos del formulario\r\n        const formData = {\r\n          comentarios:this.comentarios,\r\n            estatus:2,\r\n            empleadoModifico: 2\r\n        };\r\n  \r\n        // Realizar la solicitud POST a la API\r\n        fetch(`http://localhost/prospectos/${this.$route.params.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(formData)\r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Error en la solicitud');\r\n            alert('¡No se puede completar la solicitud!');\r\n          }\r\n          alert('Prospecto modificado con éxito!');\r\n        this.$router.push('/');\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Respuesta de la API:', data);\r\n          // Aquí puedes manejar la respuesta de la API según sea necesario\r\n        })\r\n        .catch(error => {\r\n      console.error('Error al enviar los datos:', error);\r\n      // Aquí puedes manejar errores de solicitud\r\n    });\r\n  },\r\n  rechazar() {\r\n        // Crear un objeto con los datos del formulario\r\n        const formData = {\r\n          comentarios:this.comentarios,\r\n            estatus:3,\r\n            empleadoModifico: 2\r\n        };\r\n  \r\n        // Realizar la solicitud POST a la API\r\n        fetch(`http://localhost/prospectos/${this.$route.params.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(formData)\r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Error en la solicitud');\r\n            alert('¡No se puede completar la solicitud!');\r\n          }\r\n          alert('Prospecto modificado con éxito!');\r\n        this.$router.push('/');\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Respuesta de la API:', data);\r\n          // Aquí puedes manejar la respuesta de la API según sea necesario\r\n        })\r\n        .catch(error => {\r\n      console.error('Error al enviar los datos:', error);\r\n      // Aquí puedes manejar errores de solicitud\r\n    });\r\n  },\r\n      validar(){\r\n        const editar=this.$route.params.editar;\r\n        if(editar==1){\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n      getStatusText(status) {\r\n        switch (status) {\r\n          case 1:\r\n            return 'Por revisar';\r\n          case 2:\r\n            return 'Autorizado';\r\n          case 3:\r\n            return 'Rechazado';\r\n          default:\r\n            return 'Estado desconocido';\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  <style>\r\n/* Estilos para el modal */\r\n.modal {\r\n  position: fixed; /* Posición fija */\r\n  z-index: 1; /* Poner el modal por encima de todo */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto; /* Habilitar el desplazamiento si es necesario */\r\n  background-color: rgb(0,0,0); /* Fondo oscuro */\r\n  background-color: rgba(0,0,0,0.4); /* Fondo oscuro con opacidad */\r\n}\r\n\r\n/* Contenido del modal */\r\n.modal-content {\r\n  background-color: #fefefe; /* Fondo blanco */\r\n  margin: 5% auto; /* Centrar verticalmente */\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%; /* 80% del ancho del contenedor padre */\r\n}\r\n\r\n/* Botón para cerrar el modal */\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Estilos para el botón de abrir */\r\n.abrir {\r\n  display: inline-block;\r\n  width: 1em; \r\n  height: 1em; \r\n  background-size: cover;\r\n  border-bottom: none;\r\n  background-color: transparent;\r\n  border: none;\r\n}\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}