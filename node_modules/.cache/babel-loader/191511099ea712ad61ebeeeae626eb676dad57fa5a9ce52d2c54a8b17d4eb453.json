{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"link\", {\n  href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\",\n  rel: \"stylesheet\",\n  integrity: \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\",\n  crossorigin: \"anonymous\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"Derecha\"\n};\nconst _hoisted_3 = {\n  class: \"Principal\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Formulario de Prospectos\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"input-group mb-3\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input-group-prepend\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-text\",\n  id: \"inputGroupFileAddon01\"\n}, \"Subir imagen\")], -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"custom-file\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.exit())\n  })]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.enviarFormulario1 && $options.enviarFormulario1(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Agrega un campo de carga de archivos para la imagen \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"input\", {\n    type: \"file\",\n    class: \"custom-file-input\",\n    id: \"inputGroupFile01\",\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.handleFileInputChange && _ctx.handleFileInputChange(...args))\n  }, null, 32 /* NEED_HYDRATION */)])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.enviarFormulario1()),\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Enviar\")], 32 /* NEED_HYDRATION */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","href","rel","integrity","crossorigin","class","id","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","onClick","_cache","$event","$options","exit","_hoisted_3","_hoisted_4","onSubmit","_withModifiers","args","enviarFormulario1","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","type","onChange","_ctx","handleFileInputChange"],"sources":["D:\\entrevista\\VUE\\examen-vue\\src\\components\\AgregarProspecto.vue"],"sourcesContent":["<template>\r\n          <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n          <div class=\"Derecha\">\r\n            <button @click=\"exit()\" ></button>\r\n          </div>\r\n          <div class=\"Principal\">\r\n      <h2>Formulario de Prospectos</h2>\r\n      <form @submit.prevent=\"enviarFormulario1\">\r\n        \r\n<!-- Agrega un campo de carga de archivos para la imagen -->\r\n<div class=\"input-group mb-3\">\r\n        <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\" id=\"inputGroupFileAddon01\">Subir imagen</span>\r\n        </div>\r\n        <div class=\"custom-file\">\r\n            <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" @change=\"handleFileInputChange\">\r\n        </div>\r\n    </div>\r\n        <button @click=\"enviarFormulario1()\"type=\"submit\" class=\"btn btn-primary\">Enviar</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        nombre: '',\r\n        primerApellido: '',\r\n        segundoApellido: '',\r\n        calle: '',\r\n        numero: '',\r\n        colonia: '',\r\n        codigoPostal: '',\r\n        telefono: '',\r\n        rfc: ''\r\n      };\r\n    },\r\n    \r\n    // Resto de tus métodos\r\n    methods: {\r\n      enviarFormulario1() {\r\n        // Crea un objeto FormData para enviar datos del formulario\r\n        const formData = new FormData();\r\n        formData.append('imagen', this.imagen); // Agrega la imagen al FormData\r\n        formData.append('nombreDocumento', 'Nombre del documento'); // Agrega otros datos del formulario\r\n        formData.append('prospectoID', 29); // Agrega otros datos del formulario\r\n\r\n        // Realiza la solicitud POST a la API\r\n        fetch('http://localhost/documentos', {\r\n            method: 'POST',\r\n            body: JSON.stringify(formData)\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Error en la solicitud');\r\n            }\r\n            alert('Documento agregado con éxito!');\r\n            // Limpia el formulario después de enviar\r\n            this.limpiarFormulario();\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Respuesta de la API:', data);\r\n            // Aquí puedes manejar la respuesta de la API según sea necesario\r\n        })\r\n        .catch(error => {\r\n            console.error('Error al enviar los datos:', error);\r\n        });\r\n    },\r\n      exit(){\r\n        const nuevoProspecto = confirm('Si sale perderá los datos sin confirmar');\r\n        if (nuevoProspecto) {\r\n          this.$router.push('/');\r\n      }\r\n      },\r\n      enviarFormulario() {\r\n        // Crear un objeto con los datos del formulario\r\n        const formData = {\r\n            nombre: this.nombre,\r\n            primerApellido: this.primerApellido,\r\n            segundoApellido: this.segundoApellido,\r\n            calle: this.calle,\r\n            numero: this.numero,\r\n            colonia: this.colonia,\r\n            codigoPostal: this.codigoPostal,\r\n            telefono: this.telefono,\r\n            rfc: this.rfc,\r\n            estatus:1,\r\n            empleadoCreo: 2,\r\n            empleadoModifico: 2\r\n        };\r\n  \r\n        // Realizar la solicitud POST a la API\r\n        fetch('http://localhost/prospectos', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(formData)\r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Error en la solicitud');\r\n            alert('¡No se puede completar la solicitud!');\r\n          }\r\n          alert('Prospecto Agregado con éxito!');\r\n          const nuevoProspecto = confirm('¿Desea agregar otro prospecto?');\r\n      if (nuevoProspecto) {\r\n        this.limpiarFormulario();\r\n      }\r\n      else{\r\n        this.$router.push('/');\r\n      }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Respuesta de la API:', data);\r\n          // Aquí puedes manejar la respuesta de la API según sea necesario\r\n        })\r\n        .catch(error => {\r\n      console.error('Error al enviar los datos:', error);\r\n      // Aquí puedes manejar errores de solicitud\r\n    });\r\n  },\r\n  limpiarFormulario() {\r\n    // Limpiar los campos del formulario\r\n    this.nombre = '';\r\n    this.primerApellido = '';\r\n    this.segundoApellido = '';\r\n    this.calle = '';\r\n    this.numero = '';\r\n    this.colonia = '';\r\n    this.codigoPostal = '';\r\n    this.telefono = '';\r\n    this.rfc = '';\r\n  }\r\n}\r\n  };\r\n  </script>\r\n  <style>\r\n    .Principal{\r\n       width: 500px; margin: 0 auto; text-align: center;\r\n    }\r\n    .Derecha{\r\n      text-align: right;\r\n      margin-right: 2%;\r\n      margin-top: 2%;\r\n    }\r\n    .Derecha button {\r\n    /* Estilo del botón */\r\n    background-color: transparent; /* Fondo transparente para que se pueda ver la imagen */\r\n    border: none; /* Sin bordes */\r\n    width: 60px; /* Ancho del botón */\r\n    height: 60px; /* Alto del botón */\r\n    /* Ajusta el tamaño de la imagen según el tamaño del botón */\r\n    background-size: cover;\r\n    background-position: center;\r\n    /* Agrega la imagen de fondo */\r\n    background-image: url('/src/assets/Exit.png'); /* Ruta de tu imagen */\r\n}\r\n</style>"],"mappings":";gCACUA,mBAAA,CAAkN;EAA5MC,IAAI,EAAC,yEAAyE;EAACC,GAAG,EAAC,YAAY;EAACC,SAAS,EAAC,yEAAyE;EAACC,WAAW,EAAC;;;EACjMC,KAAK,EAAC;AAAS;;EAGfA,KAAK,EAAC;AAAW;gCAC1BL,mBAAA,CAAiC,YAA7B,0BAAwB;;EAI7BK,KAAK,EAAC;AAAkB;gCACrBL,mBAAA,CAEM;EAFDK,KAAK,EAAC;AAAqB,I,aAC5BL,mBAAA,CAA6E;EAAvEK,KAAK,EAAC,kBAAkB;EAACC,EAAE,EAAC;GAAwB,cAAY,E;;EAErED,KAAK,EAAC;AAAa;;uBAdhCE,mBAAA,CAAAC,SAAA,SACUC,UAAkN,EAClNT,mBAAA,CAEM,OAFNU,UAEM,GADJV,mBAAA,CAAkC;IAAzBW,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,IAAI;QAEtBf,mBAAA,CAeA,OAfAgB,UAeA,GAdJC,UAAiC,EACjCjB,mBAAA,CAYO;IAZAkB,QAAM,EAAAN,MAAA,QAAAA,MAAA,MAPnBO,cAAA,KAAAC,IAAA,KAO6BN,QAAA,CAAAO,iBAAA,IAAAP,QAAA,CAAAO,iBAAA,IAAAD,IAAA,CAAiB;MAE9CE,mBAAA,yDAA4D,EAC5DtB,mBAAA,CAOU,OAPVuB,UAOU,GANFC,UAEM,EACNxB,mBAAA,CAEM,OAFNyB,UAEM,GADFzB,mBAAA,CAAmG;IAA5F0B,IAAI,EAAC,MAAM;IAACrB,KAAK,EAAC,mBAAmB;IAACC,EAAE,EAAC,kBAAkB;IAAEqB,QAAM,EAAAf,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEQ,IAAA,CAAAC,qBAAA,IAAAD,IAAA,CAAAC,qBAAA,IAAAT,IAAA,CAAqB;yCAGrGpB,mBAAA,CAAyF;IAAhFW,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAO,iBAAiB;IAAGK,IAAI,EAAC,QAAQ;IAACrB,KAAK,EAAC;KAAkB,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}